[2019-03-27 16:19:23,382] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@4493d195, name=log4j:logger=kafka.controller (kafka.controller)
[2019-03-27 16:19:33,451] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2019-03-27 16:19:33,515] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2019-03-27 16:19:33,516] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2019-03-27 16:19:33,519] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2019-03-27 16:19:33,521] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2019-03-27 16:19:33,523] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2019-03-27 16:19:33,631] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2019-03-27 16:19:33,637] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2019-03-27 16:19:33,663] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2019-03-27 16:19:33,664] INFO [Controller id=0] Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2019-03-27 16:19:33,672] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2019-03-27 16:19:33,672] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2019-03-27 16:19:33,672] INFO [Controller id=0] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2019-03-27 16:19:33,673] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2019-03-27 16:19:33,676] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2019-03-27 16:19:33,676] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2019-03-27 16:19:33,677] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2019-03-27 16:19:33,677] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2019-03-27 16:19:33,702] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ReplicaStateMachine)
[2019-03-27 16:19:33,703] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ReplicaStateMachine)
[2019-03-27 16:19:33,715] INFO [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map() (kafka.controller.ReplicaStateMachine)
[2019-03-27 16:19:33,715] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.PartitionStateMachine)
[2019-03-27 16:19:33,716] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.PartitionStateMachine)
[2019-03-27 16:19:33,725] INFO [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map() (kafka.controller.PartitionStateMachine)
[2019-03-27 16:19:33,727] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2019-03-27 16:19:33,727] INFO [RequestSendThread controllerId=0] Controller 0 connected to sergi:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2019-03-27 16:19:33,729] INFO [Controller id=0] Removing partitions Set() from the list of reassigned partitions in zookeeper (kafka.controller.KafkaController)
[2019-03-27 16:19:33,729] INFO [Controller id=0] No more partitions need to be reassigned. Deleting zk path /admin/reassign_partitions (kafka.controller.KafkaController)
[2019-03-27 16:19:33,763] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2019-03-27 16:19:33,763] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2019-03-27 16:19:33,763] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2019-03-27 16:19:33,763] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2019-03-27 16:19:33,764] INFO [Controller id=0] Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2019-03-27 16:19:33,780] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2019-03-27 16:19:38,782] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-03-27 16:19:38,784] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2019-03-27 16:20:31,320] INFO [Controller id=0] New topics: [Set(dataStream2)], deleted topics: [Set()], new partition replica assignment [Map(dataStream2-0 -> Vector(0))] (kafka.controller.KafkaController)
[2019-03-27 16:20:31,320] INFO [Controller id=0] New partition creation callback for dataStream2-0 (kafka.controller.KafkaController)
[2019-03-27 16:22:11,584] DEBUG [Controller id=0] Delete topics listener fired for topics dataStream2 to be deleted (kafka.controller.KafkaController)
[2019-03-27 16:22:11,584] INFO [Controller id=0] Starting topic deletion for topics dataStream2 (kafka.controller.KafkaController)
[2019-03-27 16:22:11,585] INFO [Topic Deletion Manager 0], Handling deletion for topics dataStream2 (kafka.controller.TopicDeletionManager)
[2019-03-27 16:22:11,586] INFO [Topic Deletion Manager 0], Deletion of topic dataStream2 (re)started (kafka.controller.TopicDeletionManager)
[2019-03-27 16:22:11,587] INFO [Topic Deletion Manager 0], Topic deletion callback for dataStream2 (kafka.controller.TopicDeletionManager)
[2019-03-27 16:22:11,590] INFO [Topic Deletion Manager 0], Partition deletion callback for dataStream2-0 (kafka.controller.TopicDeletionManager)
[2019-03-27 16:22:11,675] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-03-27 16:22:11,675] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=dataStream2,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2019-03-27 16:22:11,678] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=dataStream2,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2019-03-27 16:22:11,682] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=dataStream2,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2019-03-27 16:22:11,682] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-03-27 16:22:11,770] DEBUG [Controller id=0] Delete topic callback invoked for StopReplicaResponse(responses={dataStream2-0=NONE}, error=NONE) (kafka.controller.KafkaController)
[2019-03-27 16:22:11,772] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=dataStream2,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2019-03-27 16:22:11,772] INFO [Topic Deletion Manager 0], Handling deletion for topics dataStream2 (kafka.controller.TopicDeletionManager)
[2019-03-27 16:22:11,848] INFO [Topic Deletion Manager 0], Deletion of topic dataStream2 successfully completed (kafka.controller.TopicDeletionManager)
[2019-03-27 16:22:11,849] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2019-03-27 16:22:11,850] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2019-03-27 16:22:44,230] INFO [Controller id=0] New topics: [Set(dataStream2)], deleted topics: [Set()], new partition replica assignment [Map(dataStream2-0 -> Vector(0))] (kafka.controller.KafkaController)
[2019-03-27 16:22:44,230] INFO [Controller id=0] New partition creation callback for dataStream2-0 (kafka.controller.KafkaController)
[2019-03-27 16:24:38,785] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-03-27 16:24:38,785] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(dataStream2-0 -> Vector(0))) (kafka.controller.KafkaController)
[2019-03-27 16:24:38,786] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-03-27 16:24:38,787] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-03-27 16:29:38,788] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-03-27 16:29:38,800] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(dataStream2-0 -> Vector(0))) (kafka.controller.KafkaController)
[2019-03-27 16:29:38,801] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-03-27 16:29:38,801] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-03-27 16:34:38,801] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-03-27 16:34:38,801] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(dataStream2-0 -> Vector(0))) (kafka.controller.KafkaController)
[2019-03-27 16:34:38,802] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-03-27 16:34:38,802] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-03-27 16:39:38,802] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-03-27 16:39:38,802] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(dataStream2-0 -> Vector(0))) (kafka.controller.KafkaController)
[2019-03-27 16:39:38,803] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-03-27 16:39:38,803] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-03-27 16:44:38,803] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-03-27 16:44:38,804] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(dataStream2-0 -> Vector(0))) (kafka.controller.KafkaController)
[2019-03-27 16:44:38,804] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-03-27 16:44:38,804] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-03-27 16:49:38,804] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-03-27 16:49:38,805] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(dataStream2-0 -> Vector(0))) (kafka.controller.KafkaController)
[2019-03-27 16:49:38,805] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-03-27 16:49:38,805] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-03-27 16:54:38,805] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-03-27 16:54:38,806] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(dataStream2-0 -> Vector(0))) (kafka.controller.KafkaController)
[2019-03-27 16:54:38,806] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-03-27 16:54:38,806] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-03-27 16:59:38,806] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-03-27 16:59:38,807] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(dataStream2-0 -> Vector(0))) (kafka.controller.KafkaController)
[2019-03-27 16:59:38,807] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-03-27 16:59:38,807] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
